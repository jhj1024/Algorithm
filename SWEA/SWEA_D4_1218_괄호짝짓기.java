import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.StringReader;
import java.util.Stack;

/**
 * @author JUNG
 * @name SWEA_D4_1218_괄호짝짓기
 * @date 2020.07.30
 * @link https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14eWb6AAkCFAYD&categoryId=AV14eWb6AAkCFAYD&categoryType=CODE
 * @mem
 * @time
 * @caution '()', '[]', '{}', '<>' 4개의 괄호 
 * [고려사항] 
 * [입력사항] 
 * [출력사항]
 */

public class SWEA_D4_1218_괄호짝짓기 {
	static BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
	static Stack<Character> st = new Stack<Character>();
	static int T = 10, N, Answer, cnt;

	public static void main(String[] args) throws Exception {
		input = new BufferedReader(new StringReader(src));
		

		for (int test_case = 1; test_case <= T; test_case++) {
			N = Integer.parseInt(input.readLine());
			String line = input.readLine();
			
			cnt = 0; //괄호 개수
			Answer = 0;
			outer: for (int i = 0; i < N; i++) {
				switch (line.charAt(i)) {
				// 여는괄호 - 스택에 저장
				case '(':
					st.push(line.charAt(i));
					cnt++;
					break;
				case '[':
					st.push(line.charAt(i));
					cnt++;
					break;
				case '{':
					st.push(line.charAt(i));
					cnt++;
					break;
				case '<':
					st.push(line.charAt(i));
					cnt++;
					break;
				// 닫는괄호 - 스택에서 하나 빼서 짝이 맞는지 확인
				case ')':
					if(st.pop() == '(') 
						cnt--; //짝이 맞으면 괄호 개수 감소
					else {
						Answer = 0;
						break outer; //짝이 맞지 않으면 유효하지 않은 문자열
					}
					break;
				case ']':
					if(st.pop() == '[') 
						cnt--; //짝이 맞으면 괄호 개수 감소
					else {
						Answer = 0;
						break outer; //짝이 맞지 않으면 유효하지 않은 문자열
					}
					break;
				case '}':
					if(st.pop() == '{') 
						cnt--; //짝이 맞으면 괄호 개수 감소
					else {
						Answer = 0;
						break outer; //짝이 맞지 않으면 유효하지 않은 문자열
					}
					break;
				case '>':
					if(st.pop() == '<') 
						cnt--; //짝이 맞으면 괄호 개수 감소
					else {
						Answer = 0;
						break outer; //짝이 맞지 않으면 유효하지 않은 문자열
					}
					break;
				default:
					break;
				}
			}
			if(cnt == 0)
				Answer = 1; //모든 괄호가 다 정상적으로 닫혔으면 문자열이 유효.
			System.out.printf("#%d %d\n", test_case, Answer);
		}

	}

	static String src = "182\r\n"
			+ "(({<(({{[[[[<<[[(<[[{([{{{[<[[[{<<(<[[{}[]{}{}[]]]><><>{})[]{}><>[]<>><>}][]]<>{}]>]()}()()(){}}}{}][])(){}<>()}]{}[]]>()[][][]){}]]{}[]<>><>{}[]{}<>>]]]][]{}{}[]()}}))>}<>{}()))[][]\r\n"
			+ "298\r\n"
			+ "{({{[({([{(<[([(([<({[{{[[({{[({([<{(<[[(<((<[{[<[([((<{{[([{<<[{(<({[<{}()>[]<>][]})>[])<>()[]}]>><>(){}()[]}]{}()<>[]<>)<>{}<>{}{}]}()}<>>)[]){}])]>[][]{}]()}][]()>[]))[]>)]][]>)[]{}}[]<><>>]()[])}{}){}]}}<><>){}][]{}{}]<>[]}(){}<>}][]})[]()><>]))])]>{}{}())}{}])<>}{})]{}{}}[])())<>{}[]<><>}[]{}\r\n"
			+ "230\r\n"
			+ "[({([<[<[<<(([{([<((({<{([{[<[<<<([<[<([[{([<[{({([<(<[[][]]<>{}<>[]>){}{}<>>]{}())})}[]]{}>[][][]]()[][]<><>()<>){}}]])[][][]>]>()](){}[])>>><><>{}]>]{}[]}<>][]())}[][]>}<>)()))>{}[]()])[][]}]<>()<>))>>()][]>][][]>]())}<><>{}<>)]\r\n"
			+ "226\r\n"
			+ "[[[{{[[<[([((([({{[{<<([[[([[{<[{{<{[<[([<<<((([{(<({<([(<><>){}])()[]>}<>())>){}}]))){}>()<><>>>[]]<>)]>]{}()}(){}>()<><>}}]()>}<>{}]])<>{}]()(){}][]()])[]{}(){}<>>[]>}{}{}](){}}})()])(){}<>))][])[]()<>]<><>>]()][]{}}}[]]]]()\r\n"
			+ "242\r\n"
			+ "((([<[{{<[<{<{({(({({({<{{{((([{[({[{<{{(([[{([{<<({<[]>}){}[]()()>>}[][]()][]<>){}<>}]]))}[]}()><>[]}(){}]()[][][]})]<>}{}<>](){}){}){})<><><>{}<>[]}}<>{}{}}{}[]>{}}(){}){}<>})}))[]})()}>[]{}{}()}>]>{}[][][][]}}][][][]{}<>>][])()[]))()()[]{}\r\n"
			+ "138\r\n"
			+ "{[<(({[{(({[(({{{]{<[([[({[[[[<>]]]{}]{}})]]()<>{}{}<>()<>)()<>{}[]<>]>{}})<>()<><><>}{}}}())){}]}))}()<>()[]{}]})<><><><>)>[][][]]}<>[]{}\r\n"
			+ "238\r\n"
			+ "{<[[({[([{{(({{((<({(<{{([<{<([((<<(<{[<<([{{[<[{<{{{[<[{<{[[]]}()[][]}()}]>]}{}{}}<>[]<>{}(){}}>}]{}{}><>[]]}[]{}()[]{}}]{}())()<><>()>>]()<>}>{}[])<>()>>()))()])>{}}>])}{}{}}>)()<>[]}){}>)<>)()}}())){}<>()}[][]}]){}<>[]<>]}[])]()]()>}<>\r\n"
			+ "272\r\n"
			+ "([{[<[[([([{[[([[({([(<[[[<{(({<([{([{<{[<<((({(<{<[({<{<<([[{<[[{{[<(([{}])<>)[]>]()<>}<>}[]]]{}()>}][]]{})<>{}[]>>}>{}<>}{})()]<>><>}[][]>)<>{}}[]<>))){}[]>>[]]}[]>}][])[]}]())>[]{}{}}[]{}))}>(){}[]{}]<>{}]]()>)<><><><>[]])}{})[]()]])]]}])<>][]{}<>)()]<><>()]>]<>}<>()])\r\n"
			+ "218\r\n"
			+ "[{({[<{[<{[[[<[{[[[[{([{[<[[<<[{{((<[([[<[(<[({}[]<>[]()[]()(){}){})<>()>[][]<>[])<><>[](){}[]{}<>]><>]])]>[]){}<>)[][]}}<><>()<>]<>><>{}>[]<>]{}]>]<>}]{}())[]}[]]<>]]]}]()>]<>(){}]()<>()]()}>{}<>]{}}>]()[]()[]})()}]()\r\n"
			+ "258\r\n"
			+ "({{[({<{<<{{([[<{({{{[[({[<(<{<<{<<{{{{([{[{<{{[<<[[[<[{<(<[({(<>)})]><>[])()>{}}[]]{}<>><>]]]<>>{}>]}{}[]}>}]<>[]}]){}<>{}}[]}}}{}<>>>}>[]><><>()<>[]}><>)><><><>]}){}]]<>[]<>}[]<>{}}}()<>)}<>{}[]>][]{}])<>[][]{}}()}>[]<>>}<><>>()}{}<><>[]()())<>]}{}{}[]}[])\r\n"
			+ "";

}

